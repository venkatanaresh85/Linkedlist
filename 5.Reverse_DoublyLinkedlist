#Brute Force Approach

#include <bits/stdc++.h>
using namespace std;

struct Node {
    int data;
    Node* next;
    Node* back;
    Node(int data1, Node* next1, Node* back1) {
        data = data1;
        next = next1;
        back = back1;
    }
    Node(int data1) {
        data = data1;
        next = nullptr;
        back = nullptr;
    }
};

Node* Convertarray(vector<int>& v) {
    Node* head = new Node(v[0]);
    Node* mover = head;
    for (int i = 1; i < v.size(); i++) {
        Node* temp = new Node(v[i], nullptr, mover);
        mover->next = temp;
        mover = temp;
    }
    return head;
}


Node* Reverse(Node* head){
    Node* temp=head;
    stack<int> st;
    while(temp!=nullptr){
        st.push(temp->data);
        temp=temp->next;
    }
    temp=head;
    while(temp!=nullptr){
        temp->data=st.top();
        st.pop();
        temp=temp->next;
    }
    return head;
    
}
void print(Node* head) {
    if (head == nullptr) {
        cout << "List is empty\n";
        return;
    }
    while (head->next != nullptr) {
        cout << head->data << "->";
        head = head->next;
    }
    cout << head->data << endl;
}

int main() {
    vector<int> v = {10,20,30,40,50};
    Node* head = Convertarray(v);
    head=Reverse(head);
    print(head);
}
